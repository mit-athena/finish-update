<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
	$Id: finish-update.xml,v 1.3 2005-05-07 16:07:35 rbasch Exp $
-->

<service_bundle type='manifest' name='athena:finish-update'>

<service
	name='site/athena/finish-update'
	type='service'
	version='1'>

	<create_default_instance enabled='true' />

	<single_instance />

	<dependency
		name='finish_update_milestones'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/milestone/single-user' />
		<service_fmri value='svc:/milestone/name-services' />
	</dependency>

	<dependency
		name='finish_update_fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/system/filesystem/local' />
	</dependency>

	<!--
	  Make sure the Athena BIND daemon is started before us.
	-->
	<dependency
		name='finish_update_bind'
		grouping='optional_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/site/athena/dns-server' />
	</dependency>

	<!--
	  The sysconfig milestone collects dependencies related to
	  system configuration; multi-user and console-login are
	  dependent on it.
	-->
	<dependent
		name='finish_update_sysconfig'
		grouping='require_all'
		restart_on='none'>
		<service_fmri value='svc:/milestone/sysconfig' />
	</dependent>

	<!--
	  The cron service only depends on the local filesystem
	  and name services starting, so add a dependency to it,
	  to prevent it from running during an update.
	-->
	<dependent
		name='finish_update_cron'
		grouping='require_all'
		restart_on='none'>
		<service_fmri value='svc:/system/cron' />
	</dependent>

	<exec_method
		type='method'
		name='start'
		exec='/etc/athena/finish-update &gt; /dev/console &lt; /dev/console 2&gt;&amp;1'
		timeout_seconds='0'>
		<method_context>
			<method_credential user='root' group='root' />
		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':true'
		timeout_seconds='3'>
	</exec_method>

	<property_group name='startd' type='framework'>
		<!-- Do not restart -->
		<propval name='duration' type='astring' value='transient' />
		<propval name='timeout_retry' type='boolean' value='false' />
	</property_group>

	<stability value='Evolving' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Complete update of an Athena workstation
			</loctext>
		</common_name>
	</template>

</service>

</service_bundle>
